---
- hosts: all

  vars:
    go_root: "/usr/local/go"
    go_path: "/home/nutanix/postgres"
    db_user: "pgxport"
    db_pass: "pgxport"
    go_bin: "/usr/local/go/bin/go"
    proxy_env:
      GOROOT: '{{ go_root }}'
      GOPATH: '{{ go_path }}'
      PATH: '{{ go_root }}/bin:{{ go_path }}/bin:{{ ansible_env.PATH }}'
      DATA_SOURCE_NAME: "postgresql://{{ db_user }}:{{ db_pass }}@127.0.0.1:5432/{{ dbname }}"

  tasks:

  # Install go

    - name: Ensures {{ go_path }} dir exists
      file: path={{ go_path }} state=directory

    - name: Unarchive GO on all hosts
      unarchive:
        src: https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz
        dest: /usr/local
        remote_src: yes
      become: yes
      retry: 5

  # check go version

    - name: Check go version
      shell: "{{ go_bin }} env"
      environment: "{{proxy_env}}"
      register: go_env

    - debug:
        var: go_env

  # Install Mage

    - name: Install git
      become: yes
      apt:
        name: git
        state: present
        update_cache: yes

    - name: Get Mage
      shell: "{{ go_bin }} get -u -d github.com/magefile/mage"
      environment: "{{proxy_env}}"

    - name: Setup Mage
      shell: "cd {{ go_path }}/src/github.com/magefile/mage; {{ go_bin }} run bootstrap.go"
      environment: "{{proxy_env}}"

  # Install postgres_exporter

    - name: Get postgres_exporter
      shell: "{{ go_bin }} get github.com/wrouesnel/postgres_exporter"
      environment: "{{proxy_env}}"
      ignore_errors: yes

    - name: Setup postgres_exporter
      shell: "cd {{ go_path }}/src/github.com/wrouesnel/postgres_exporter; {{ go_bin }} run mage.go binary"
      environment: "{{proxy_env}}"

    - name: Find postgres_exporter binary path
      find:
        paths: "{{ go_path }}/src/github.com/wrouesnel/postgres_exporter/bin"
        file_type: "file"
        recurse: yes
      become: yes
      register: find_result

    - debug:
        var: find_result

    - name: Ensure user has access to database
      postgresql_user:
        db: "{{ dbname }}"
        name: "{{ db_user }}"
        password: "{{ db_pass }}"
        priv: ALL
        role_attr_flags: LOGIN
      become: yes
      become_user: postgres

    - name: Copy postgres_exporter to /usr/local/bin
      copy:
        src: "{{ find_result.files[0].path }}"
        dest: "/usr/local/bin/"
        force: yes
        mode: '0755'
        remote_src: true
      become: yes
      become_user: root

    - name: Copy postgres_exporter.service to /lib/systemd/system/
      copy:
        src: postgres_exporter.service
        dest: /lib/systemd/system/
        force: yes
        mode: '0755'
      become: yes
      become_user: root

    - name: Make sure a postgres_exporter.service is running
      systemd:
        state: started
        name: postgres_exporter


  # Run postgres_exporter
  #  - name: Run postgres_exporter in the background
  #    shell: "(cd /; ln -s {{ find_result.files[0].path }} /usr/local/bin)"
  #    environment: "{{proxy_env}}"
...
